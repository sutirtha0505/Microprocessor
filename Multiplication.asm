//Multiplication of two 8 bit numbers
F000H: 05   //FIRST NUMBER
F001H: 04   //SECOND NUMBER
F002H: 14  //PRODUCT OR LOWER NIBBLE IF 16 BIT
F003H: CARRY-PART//UPPER NIBBLE

LXI H,F000H     //HL REGISTER PAIR POINTS TO F000H
MOV B,M         //MOVES THE VALUE OF MEMORY INSIDE OF THE B REGISTER
INX H           //NOW HL REGISTER PAIR POINTS TO THE NEXT ADDRESS
MOV C,M         //MOVES THE VALUE OF MEMORY INSIDE OF THE C REGISTER
//EDGE CASE IF SECOND NO IS ZERO
MOV A,C         //PUT THE VALUE OF C IN THE ACCUMULATOR
ANI FF          //LOGICAL AND OPERATION WITH FF
JZ L2           //IF ZERO APPEARS IN THE ACCUMULATOR, JUMP TO LABEL L2
MVI A,00        //PUTS 00 INSIDE OF ACCUMULATOR
MVI D,00        //PUTS 00 INSIDE OF D REGISTER
L1:ADC B           //ADDS B WITH THE ACCUMULATOR WITH CARRY
DCR C           //C DECREASES ONE BY ONE UNTIL REACHES 0
JNZ L1          //JUMPS TO LABEL 1 IF THE ZERO FLAG BECOMES 1, MEANS 0 APPEARS IN C
JNC L2          //IF THERE IS NO CARRY JUST GO TO LABEL 2
MVI D,01        //IF 01 APPEARS IN CARRY PUT IT IN THE D REGISTER
STA F003H       //CARRY IS STORED IN F003H
MOV A,D         //D REGISTER'S VALUE IS STORED IN ACCUMULATOR
L2:STA F002H    //STORE THE RESULT FROM  THE ACCUMULATOR TO MEMORY LOCATION F002H
HLT             //END OF THE PROGRAM